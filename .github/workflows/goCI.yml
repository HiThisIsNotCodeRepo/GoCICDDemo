name: CI setup for Go #Name the workflow
on: #on event keyword
  push:
    branches: [main] #identifying branch

jobs: # Job to execute on event
  my-job:
    name: My Job
    runs-on: ubuntu-latest # specify OS in virtual machine
    steps:
    - name: Print a greeting
      run: | 
        ls 
        echo Hello there! # run terminal command
        
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        # The Go version to download (if necessary) and use. Supports semver spec and ranges.
        go-version: 1.13.7 # optional
    - name: show Go version # verify go is install
      run: go version
      
    - name: Checkout our codes # bring repo code to virtual env
      uses: actions/checkout@v2
      
    - name: Check files system # check virtual env has files
      run: |
        ls
        cat calc.go #prints the content of calc.go
        
    - name: Checkout private repo remotely
      uses: actions/checkout@v2
      with:
        repository: lowkh2/GoSchoolRemoteExample # hidden repo i am trying to access
        path: virtualRepoFolder #Folder to save to in my virtual env
        token: ${{secrets.GO_SECRET}} #Pwd to enter remote hidden repo  
  
    - name: Show hidden files
      run: |
        cd virtualRepoFolder
        ls -l 
        cat myText.txt
        cd ..
        
    - name: Install dependencies for Go
      run: |
        go get github.com/franela/goblin
        go get github.com/tebeka/go2xunit
        go test -v
        go test -v | go2xunit > report.xml
        ls
        
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: report.xml
        
    - if: ${{success()}}
      name: Create Upload Direcotry
      run: mkdir upload
      
    - name: Prepare Documents
      run: mv report.xml ./upload
    
    - name: Prepare artifacts
      uses: actions/upload-artifact@v2
      with:
        name: assetDocuments
        path: upload
        
    - name: Download Content
      uses: actions/download-artifact@v2
      with:
        name: assetDocuments
      
    - if: ${{failure()}}
      name: Create Issues Notifications
      uses: nashmaniac/create-issue-action@v1.1
      with:
        title: Build Failed
        token: ${{secrets.GITHUB_TOKEN}}
        assignees: ${{github.actor}}
        labels: worflow-failed
        body: Workflow failed for commit ${{github.sha}}
        
    - if: ${{success()}}
      name: success-whatsapp-notify
      env:
        account_sid: ${{ secrets.account_sid }}
        auth_token: ${{ secrets.auth_token }}
        to_whatsapp_no: ${{ secrets.to_whatsapp_no }}
        message: "GoCICDDemo Test Success"
      uses: khaled-ibtikar/whatsapp-push-notify-action@master
      
    - if: ${{failure()}}
      name: fail-whatsapp-notify
      env:
        account_sid: ${{ secrets.account_sid }}
        auth_token: ${{ secrets.auth_token }}
        to_whatsapp_no: ${{ secrets.to_whatsapp_no }}
        message: "GoCICDDemo Test Success"
      uses: khaled-ibtikar/whatsapp-push-notify-action@master
