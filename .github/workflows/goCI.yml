name: CI setup for Go #Name the workflow
on: #on event keyword
  push:
    branches: [main] #identifying branch

jobs: # Job to execute on event
  my-job:
    name: My Job
    runs-on: ubuntu-latest # specify OS in virtual machine
    steps:
    - name: Print a greeting
      run: | 
        ls 
        echo Hello there! # run terminal command
        
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        # The Go version to download (if necessary) and use. Supports semver spec and ranges.
        go-version: 1.13.7 # optional
    - name: show Go version # verify go is install
      run: go version
      
    - name: Checkout our codes # bring repo code to virtual env
      uses: actions/checkout@v2
      
    - name: Check files system # check virtual env has files
      run: |
        ls
        cat calc.go #prints the content of calc.go
        
    - name: Checkout private repo remotely
      uses: actions/checkout@v2
      with:
        repository: lowkh2/GoSchoolRemoteExample # hidden repo i am trying to access
        path: virtualRepoFolder #Folder to save to in my virtual env
        token: ${{secrets.GO_SECRET}} #Pwd to enter remote hidden repo  
        
    - name: set-up whatsapp
      id: whatsapp-notify
      env:
        account_sid: ${{ secrets.account_sid }}
        auth_token: ${{ secrets.auth_token }}
        to_whatsapp_no: ${{ secrets.to_whatsapp_no }}


      uses: ishween/whatsapp-push-notify-action@master
      
    - name : send a whatsapp msg

      run: |
        echo 'Start!'
        
        
    - name: Twilio-Whatsapp Action
      # You may pin to the exact commit or the version.
      # uses: mdb571/wa-action@a060b1dc0c137d4f889c23f0732f074c8ec7bf87
      uses: mdb571/wa-action@v1.0
      with:
        # The twilio whatsapp number from which the sms should be sent
        from: +14155238886
        # The number which is configured with twilio
        to: ${{ secrets.to_whatsapp_no }}
        # Twilio Accout SID from twilio console
        twilio_account_sid:  ${{ secrets.account_sid }}
        # Twilio Authentication token from console
        twilio_auth: ${{ secrets.auth_token }}
        # Issue Title
#         iutitle: # optional, default is ${{ github.event.issue.title }}
#         # Issue Number
#         iunum: # optional, default is ${{ github.event.issue.number }}
#         # Issue Triggerer
#         iu_actor: # optional, default is ${{ github.event.issue.user.login }}
#         # Issue Body
#         iu_body: # optional, default is ${{ github.event.issue.body }}
#         # Issue Comment
#         iu_com: # optional, default is ${{github.event.comment.body}}
#         # Current state of the issue/pull request
#         event_action: # optional, default is ${{ github.event.action }}
#         # PR Number
#         prnum: # optional, default is ${{ github.event.pull_request.number }}
#         # PR Title
#         prtitle: # optional, default is ${{ github.event.pull_request.title }}
#         # PR Content
#         pr_body: # optional, default is ${{ github.event.pull_request.body }}
#         # Stars of the Repo
#         stargazers: # optional, default is ${{ github.event.repository.stargazers_count }}
#         # Number of Forks
#         forkers: # optional, default is ${{ github.event.repository.forks_count }}
    
    - name: Show hidden files
      run: |
        cd virtualRepoFolder
        ls -l 
        cat myText.txt
        cd ..
        
    - name: Install dependencies for Go
      run: |
        go get github.com/franela/goblin
        go get github.com/tebeka/go2xunit
        go test -v
        go test -v | go2xunit > report.xml
        ls
        
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: report.xml
        
    - if: ${{success()}}
      name: Create Upload Direcotry
      run: mkdir upload
      
    - name: Prepare Documents
      run: mv report.xml ./upload
    
    - name: Prepare artifacts
      uses: actions/upload-artifact@v2
      with:
        name: assetDocuments
        path: upload
        
    - name: Download Content
      uses: actions/download-artifact@v2
      with:
        name: assetDocuments
    
    - if: ${{failure()}}
      name: Create Issues Notifications
      uses: nashmaniac/create-issue-action@v1.1
      with:
        title: Build Failed
        token: ${{secrets.GITHUB_TOKEN}}
        assignees: ${{github.actor}}
        labels: worflow-failed
        body: Workflow failed for commit ${{github.sha}}
      
